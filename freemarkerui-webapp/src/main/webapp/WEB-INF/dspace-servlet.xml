<?xml version="1.0"?>
<!--
    $Id: $
    $URL: $
    *************************************************************************
    Copyright (c) 2002-2009, DuraSpace.  All rights reserved
    Licensed under the DuraSpace License.

    A copy of the DuraSpace License has been included in this
    distribution and is available at: http://scm.dspace.org/svn/repo/licenses/LICENSE.txt
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--
        Automatic scan for Annotation driven configuration of MVC
        Or, simply instantiate the annotated bean in the context
        imho, requires Spring 3.x to be really useful (re: configuring interceptors
    -->
    <!-- context:component-scan base-package="org.dspace.webmvc.controller" / -->

    <!-- Interceptor to allow theme change - ie. ?theme=kubrick -->
    <bean id="themeChangeInterceptor" class="org.dspace.webmvc.theme.ThemeChangeInterceptor">
        <property name="mappings">
            <value>
                /kubrick=kubrick
                /mirage=mirage
            </value>
        </property>
    </bean>

    <bean id="dspaceModelInterceptor" class="org.dspace.webmvc.utils.DSpaceModelInterceptor" />

    <!--
        Handler for annotated controllers
    -->
    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
        <property name="interceptors">
            <list>
                <ref bean="themeChangeInterceptor" />
                <ref bean="dspaceModelInterceptor" />
            </list>
        </property>
    </bean>

    <!--
        Map URLs to Spring WebMVC Controllers.

                /=homeController
                /bitstream/**=bitstreamController
                /browse/**=browseController
                /community-list=browseHierarchyController
                /handle/**/browse=browseController
                /handle/**/search=searchController
                /handle/**=handleController
                /retrieve/**=bitstreamController
                /advanced-search/**=searchController
                /simple-search/**=searchController
                /search/**=searchController
                /login/**=loginController
                /**/*.ftl=freemarkerWrapperServletController
                /**/*=resourceController
    -->
    <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="interceptors">
            <list>
                <ref bean="themeChangeInterceptor" />
                <ref bean="dspaceModelInterceptor" />
            </list>
        </property>
        <property name="mappings">
            <value>
                /**/*.ftl=freemarkerWrapperServletController
                /=homeController
                /bitstream/**=bitstreamController
                /browse/**=browseController
                /community-list=browseHierarchyController
                /handle/**=handleController
                /login/**=loginController
                /retrieve/**=bitstreamController
                /*search/**=searchController
                /**/*=resourceController
            </value>
        </property>
        <property name="alwaysUseFullPath">
			<value>true</value>
		</property>
    </bean>

    <!--
        Define the Controller beans
    -->
    <bean id="homeController" class="org.dspace.webmvc.controller.HomeController" />

    <bean id="handleController" class="org.dspace.webmvc.controller.HandleController" />

    <bean id="browseController" class="org.dspace.webmvc.controller.BrowseController" />

    <bean id="browseHierarchyController" class="org.dspace.webmvc.controller.BrowseHierarchyController" />

    <bean id="bitstreamController" class="org.dspace.webmvc.controller.BitstreamController" />

    <bean id="searchController" class="org.dspace.webmvc.controller.SearchController" />

    <bean id="loginController" class="org.dspace.webmvc.controller.LoginController" />

    <bean id="renderObjectController" class="org.dspace.webmvc.controller.RenderDSpaceObjectController" />

    <!--
        Controller to return file content
    -->
    <bean id="resourceController" class="org.dspace.webmvc.controller.ResourceController" />

    <!--
        Annotation-based Validation
    -->
    <bean id="beanValidator" class="org.dspace.webmvc.utils.BeanValidator" />
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="webBindingInitializer">
            <bean class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">
                <property name="validator" ref="beanValidator" />
            </bean>
        </property>
    </bean>

    <bean class="org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter" />
    <bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter" />
    <!-- bean class="org.springframework.web.servlet.mvc.throwaway.ThrowawayControllerHandlerAdapter"/-->

    <!--
        Define a view name translator, to map the request to a view
        Allows the choice of which view to display to be determined outside of the controller
    -->
    <bean id="viewNameTranslator" class="org.dspace.webmvc.view.DSpaceRequestToViewNameTranslator"/>

    <!--
        Define a theme resolver. In this case, supply the name of the theme that the site will use.
    -->
    <!-- bean id="themeResolver" class="org.springframework.web.servlet.theme.SessionThemeResolver" -->
    <bean id="themeResolver" class="org.dspace.webmvc.theme.RequestThemeResolver">
        <property name="defaultThemeName" value="oasis" />
        <!-- property name="defaultThemeName" value="classic" / -->
    </bean>

    <bean id="themeSource" class="org.springframework.ui.context.support.ResourceBundleThemeSource">
        <property name="basenamePrefix" value="themes/" />
    </bean>

    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="org.dspace.authorize.AuthorizeException">redirect:/login</prop>
            </props>
        </property>
        <!-- property name="defaultErrorView" value="/general/error/500" /-->
    </bean>

    <!--
        Provide a configuration for the FreeMarker engine
        This refers to the configuration declared in the application context
    -->
    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <description>Required for Freemarker to work in web tier</description>
        <property name="configuration" ref="freemarkerConfiguration" />
    </bean>

    <!--
        Allow Spring WebMVC to use Freemarker templates as views
    -->
    <bean id="ftlViewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="viewClass" value="org.dspace.webmvc.view.freemarker.ObjectWrapperFreeMarkerView" />
        <property name="cache" value="true"/>
        <property name="prefix" value=""/>
        <property name="suffix" value=".ftl"/>
        <property name="exposeSpringMacroHelpers" value="true"/>
    </bean>
    
    <!--
        Wrapped servlet for handling FreeMarker page requests
        - these come from SiteMesh / FreeMarker templates processed outside of WebMVC
    -->
    <bean id="freemarkerWrapperServletController" class="org.springframework.web.servlet.mvc.ServletWrappingController">
        <property name="servletClass" value="org.dspace.webmvc.servlet.SpringFreemarkerDecoratorServlet" />
        <property name="servletName" value="sitemesh-freemarker" />
    </bean>

    <!--
        Define a proxy for the views, that will allow for decoration and theme selection
    -->
    <bean id="viewProxy" class="org.dspace.webmvc.view.decorator.ThemeAwareDecoratorViewProxy" />

    <!--
        Apply the proxy to any View        
    -->
    <aop:aspectj-autoproxy/>
</beans>
