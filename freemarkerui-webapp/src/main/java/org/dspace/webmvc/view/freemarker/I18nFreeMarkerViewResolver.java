/**
 * $Id: $
 * $URL: $
 * *************************************************************************
 * Copyright (c) 2002-2009, DuraSpace.  All rights reserved
 * Licensed under the DuraSpace License.
 *
 * A copy of the DuraSpace License has been included in this
 * distribution and is available at: http://scm.dspace.org/svn/repo/licenses/LICENSE.txt
 */

package org.dspace.webmvc.view.freemarker;

import org.springframework.web.servlet.view.AbstractTemplateViewResolver;

/**
 * Convenience subclass of UrlBasedViewResolver that supports FreeMarkerView
 * (i.e. FreeMarker templates) and custom subclasses of it.
 *
 * <p>The view class for all views generated by this resolver can be specified
 * via <code>setViewClass</code>. See UrlBasedViewResolver's javadoc for details.
 *
 * <p><b>Note:</b> When chaining ViewResolvers, a FreeMarkerViewResolver always
 * needs to be last, as it will attempt to resolve any view name, no matter
 * whether the underlying resource actually exists.
 *
 * @author Juergen Hoeller
 * @since 1.1
 * @see #setViewClass
 * @see #setPrefix
 * @see #setSuffix
 * @see #setRequestContextAttribute
 * @see #setExposeSpringMacroHelpers
 * @see I18nFreeMarkerView
 */
public class I18nFreeMarkerViewResolver extends AbstractTemplateViewResolver {

	/**
	 * Sets default viewClass to <code>requiredViewClass</code>.
	 * @see #setViewClass
	 * @see #requiredViewClass
	 */
	public I18nFreeMarkerViewResolver() {
		setViewClass(requiredViewClass());
	}

	/**
	 * Requires I18nFreeMarkerView.
	 * @see I18nFreeMarkerView
	 */
	protected Class requiredViewClass() {
		return I18nFreeMarkerView.class;
	}

}
